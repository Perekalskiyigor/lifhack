**********************Создание таблицы


CREATE TABLE book(
    book_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(30),
    author	VARCHAR(30),
    price	DECIMAL(8, 2),
    amount	INT
);


**********************Вставка записи в таблицу

INSERT INTO book (book_id, title, author, price, amount) 
VALUES ('1', 'Мастер и Маргарита', 'Булгаков М.А.', '670.99', '3');


***********************Выборка всех данных из таблицы

Select * 
FROM book


************************Выборка отдельных столбцов

SELECT author, title, price FROM book

Выборка новых столбцов и присвоение им новых имен

SELECT title AS Название, author AS Автор
FROM book;

**********************Выборка данных с созданием вычисляемого столбца

SELECT title, amount,
     1.65 * amount AS  pack
FROM book;


*********************Выборка данных, вычисляемые столбцы, математические функции

SELECT title, 
    author,
    amount,
   ROUND(price-(price*30/100),2) AS new_price # Столбец с новой ценой назвать new_price, цену округлить до 2-х знаков после запятой
FROM book;

***********************Выборка данных, вычисляемые столбцы, логические функции

SELECT author,title, 
# поднять цену книг Булгакова на 10%
# цену книг Есенина - на 5%
# Значение округлить до двух знаков после
    ROUND(IF(author='Булгаков М.А.', price+(price/100*10), IF(author='Есенин С.А.', price+(price/100*5), price * 1)),2) AS new_price
FROM book;

**************************Выборка данных по условию

SELECT author, title,  price
FROM book
WHERE amount < 10; # цены тех книг, количество которых меньше 10

**************************Выборка данных, логические операции

SELECT title,author,price,amount 
FROM book
# цену  и количество всех книг, цена которых меньше 500 или больше 600, а стоимость всех экземпляров этих книг больше или равна 5000
WHERE price > 500 AND price > 600 AND  amount*price>=5000;

****************************Выборка данных, операторы BETWEEN, IN

# Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),  а количество или 2, или 3, или 5, или 7 .
SELECT title, author 
FROM book
WHERE amount BETWEEN 540.50 AND 800 OR amount=2 OR amount=3 OR amount=5 OR amount=7 ;

****************************Выборка данных с сортировкой

# Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 (включая границы). 
# Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).
SELECT author,title
FROM book
WHERE amount BETWEEN 2 AND 14
ORDER BY 1 DESC, 2;

****************************Выборка данных, оператор LIKE

# Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». 
# Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, 
# между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. 
# Информацию отсортировать по названию книги в алфавитном порядке.

SELECT title,author 
FROM book 
WHERE title LIKE "%_ _%" AND author LIKE "%С.%"    
ORDER BY 
    title ASC;

SELECT title FROM book 
WHERE   title LIKE "_% и _%" /*отбирает слово И внутри названия */
    OR title LIKE "и _%" /*отбирает слово И в начале названия */
    OR title LIKE "_% и" /*отбирает слово И в конце названия */
    OR title LIKE "и" /* отбирает название, состоящее из одного слова И */

SELECT title FROM book 
WHERE title LIKE "_____" Вывести название книг, состоящих ровно из 5 букв.

SELECT title FROM book 
WHERE title NOT LIKE "% %";  Вывести названия книг, которые состоят ровно из одного слова, если считать, что слова в названии отделяются друг от друга пробелами


*********************************Выбор уникальных элементов столбца

SELECT  amount
FROM book
GROUP BY amount; # Отобрать различные (уникальные) элементы столбца amount таблицы book

*********************************Выборка данных, групповые функции SUM и COUNT

# Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.  
# Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.
SELECT author AS Автор, count(amount) AS Различных_книг, sum(amount) AS Количество_экземпляров
FROM book
GROUP BY author;

***********************************Выборка данных, групповые функции MIN, MAX и AVG

# Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора . 
# Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно
SELECT author AS author, MIN(price) AS Минимальная_цена, MAX(price) AS Максимальная_цена, AVG (price) AS Средняя_цена
FROM book
GROUP BY author;

**************************************Выборка данных c вычислением, групповые функции

# Вывести суммарную стоимость книг каждого автора.
SELECT author, SUM(price * amount) AS Стоимость
FROM book
GROUP BY author;

# Найти среднюю цену книг каждого автора.
SELECT author, ROUND(AVG(price),2) AS Средняя_цена
FROM book
GROUP BY author;

# Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), а также вычислить налог на добавленную стоимость  для полученных сумм (имя столбца НДС ) , который включен в стоимость и составляет k = 18%,  а также стоимость книг  (Стоимость_без_НДС) без него. 
# Значения округлить до двух знаков после запятой. В запросе для расчета НДС(tax)  и Стоимости без НДС(S_without_tax) использовать следующие формулы
SELECT author, 
    SUM(price * amount) AS Стоимость,ROUND(((SUM(price * amount)*18/100)/(1+18/100)),2) AS НДС,
    ROUND(SUM(price * amount)/(1+18/100),2) AS Стоимость_без_НДС
FROM book
GROUP BY author;

********************************************Вычисления по таблице целиком

# Посчитать общее количество экземпляров книг на складе и их стоимость .
SELECT SUM(amount) AS Количество, 
    SUM(price * amount) AS Стоимость
FROM book;

# Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. Названия столбцов Минимальная_цена, 
# Максимальная_цена, Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой.
SELECT MIN(price) AS Минимальная_цена, 
    MAX(price) AS Максимальная_цена,
    ROUND (AVG (price),2) AS Средняя_цена
FROM book;

************************************************Выборка данных по условию, групповые функции

# Найти минимальную и максимальную цену книг всех авторов, общая стоимость книг которых больше 5000.
SELECT author,
    MIN(price) AS Минимальная_цена, 
    MAX(price) AS Максимальная_цена
FROM book
GROUP BY author
HAVING SUM(price * amount) > 5000 
ORDER BY Минимальная_цена DESC;

# Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. 
# Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.
SELECT 
    ROUND (AVG(price),2) AS Средняя_цена, 
    ROUND (SUM(price*amount),2) AS Стоимость
FROM book
WHERE amount>=5 AND amount<=14 
ORDER BY price DESC;

Порядок запороса
FROM
WHERE
GROUP BY
HAVING
SELECT
ORDER BY

# Вывести максимальную и минимальную цену книг каждого автора, кроме Есенина, количество экземпляров книг которого больше 10. 
SELECT author,
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена
FROM book
WHERE author <> 'Есенин С.А.'
GROUP BY author
HAVING SUM(amount) > 10;

#  Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». В результат включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия») более 5000 руб. 
# Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.
SELECT author,
    SUM(price*amount) AS Стоимость
FROM book
WHERE title <> 'Идиот' AND title <> 'Белая гвардия'
GROUP BY author
HAVING SUM(price*amount) > 5000
ORDER BY Стоимость DESC;

**********************************Вложенный запрос, возвращающий одно значение
# Вывести информацию о самых дешевых книгах, хранящихся на складе.
SELECT title, author, price, amount
FROM book
WHERE price = (
         SELECT MIN(price) 
         FROM book
      );

# Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. 
# Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.

SELECT author,title,price
FROM book
WHERE price <= (
         SELECT AVG(price) 
         FROM book
      )
ORDER BY price DESC;

**********************************Использование вложенного запроса в выражении
Вывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг на складе более чем на 3.
То есть нужно вывести и те книги, количество экземпляров которых меньше среднего на 3, или больше среднего на 3.
SELECT title, author, amount 
FROM book
WHERE ABS(amount - (SELECT AVG(amount) FROM book)) >3;

Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.
SELECT author,title,price 
FROM book
WHERE ABS(price - (SELECT MIN(price) FROM book)) <=150
ORDER BY price ASC;

*****************************************Вложенный запрос, оператор IN
Вывести информацию о книгах тех авторов, общее количество экземпляров книг которых не менее 12.
SELECT title, author, amount, price
FROM book
WHERE author IN (
        SELECT author 
        FROM book 
        GROUP BY author 
        HAVING SUM(amount) >= 12
      );

Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.
      SELECT author,title,amount
FROM book
WHERE amount IN (
        SELECT amount 
        FROM book 
        GROUP BY amount
        HAVING COUNT(amount)=1
      );

***************************************Вложенный запрос, операторы ANY и ALL
Вывести информацию о тех книгах, количество которых меньше самого маленького среднего количества книг каждого автора.
SELECT title, author, amount, price
FROM book
WHERE amount < ALL (
        SELECT AVG(amount) 
        FROM book 
        GROUP BY author 
      );

**********************************************Вложенный запрос после SELECT
Вывести информацию о книгах, количество экземпляров которых отличается от 
среднего количества экземпляров книг на складе более чем на 3,  а также указать среднее значение количества экземпляров книг.
SELECT title, author, amount, 
    (
     SELECT AVG(amount) 
     FROM book
    ) AS Среднее_количество 
FROM book
WHERE abs(amount - (SELECT AVG(amount) FROM book)) >3;

Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. 
Последнему столбцу присвоить имя Заказ. В результат не включать книги, которые заказывать не нужно.
SELECT title, author, amount, 
    abs((amount - (SELECT MAX(amount) FROM book))) AS 'Заказ' 
FROM book
WHERE abs(amount - (SELECT MAX(amount) FROM book)) > 0;

****************************************************Добавление записей в таблицу
Занесите в таблицу supply четыре записи, чтобы получилась следующая таблица
INSERT INTO supply (supply_id, title, author, price, amount) 
VALUES 
    (1,'Лирика', 'Пастернак Б.Л.', 518.99, 2),
    (2,'Черный человек', 'Есенин С.А.', 570.20, 6),
    (3,'Белая гвардия', 'Булгаков М.А.', 540.50, 7),
    (4,'Идиот', 'Достоевский Ф.М.', 360.80, 3);

*******************************************************Добавление записей из другой таблицы
Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М.
INSERT INTO book (title, author, price, amount) 
SELECT title, author, price, amount 
FROM supply 
WHERE author <> 'Булгаков М.А.' AND author <> 'Достоевский Ф.М.';
SELECT * FROM book;

*********************************************************Добавление записей, вложенные запросы
Занести из таблицы supply в таблицу book только те книги, названия которых отсутствуют в таблице book.
INSERT INTO book (title, author, price, amount) 
SELECT title, author, price, amount 
FROM supply
WHERE title NOT IN (
        SELECT title 
        FROM book
      );

SELECT * FROM book;

************************************************************Запросы на обновление
Уменьшить на 30% цену тех книг в таблице book, количество которых меньше 5
UPDATE таблица SET поле = выражение
Уменьшить на 30% цену книг в таблице book
UPDATE book 
SET price = 0.7 * price;

SELECT * FROM book;

Уменьшить на 10% цену тех книг в таблице book, количество которых принадлежит интервалу от 5 до 10, включая границы.
UPDATE book 
SET price = 0.9 * price 
WHERE amount BETWEEN 5 AND 10;

SELECT * FROM book;

***********************************************************Запросы на обновление нескольких столбцов
В столбце buy покупатель указывает количество книг, которые он хочет приобрести. Для каждой книги, выбранной покупателем, необходимо уменьшить 
ее количество на складе на указанное в столбцеbuy количество, а в столбец buy занести 0.
UPDATE book 
SET amount = amount - buy,
    buy = 0;

SELECT * FROM book;

В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, чтобы оно не превышало количество экземпляров книг, указанных в столбце amount. 
А цену тех книг, которые покупатель не заказывал, снизить на 10%
UPDATE book 
SET buy = IF(buy>amount, amount,buy),
    price = IF(buy=0, price*0.9, price);

SELECT * FROM book;

*****************************************************************Запросы на обновление нескольких таблиц 
Для тех книг в таблице book , которые есть в таблице supply, не только увеличить их количество в таблице book 
( увеличить их количество на значение столбца amountтаблицы supply), но и пересчитать их цену 
(для каждой книги найти сумму цен из таблиц book и supply и разделить на 2)
UPDATE book, supply 
SET book.amount = book.amount + supply.amount,
    book.price = (book.price + supply.price)/2
WHERE book.title = supply.title AND book.author = supply.author;

SELECT * FROM book;

***************************************************************************Запросы на удаление
Удалить из таблицы supply все книги, названия которых есть в таблице book.
DELETE FROM supply 
WHERE title IN (
        SELECT title 
        FROM book
      );


SELECT * FROM supply;

Удалить из таблицы supply книги тех авторов, общее количество экземпляров книг которых в таблице book превышает 10.
DELETE FROM supply
WHERE author IN (
    SELECT author
    FROM book
    GROUP BY author
    HAVING SUM(amount) > 10);
SELECT * FROM supply;

*******************************************************************Запросы на создание таблицы
Создать таблицу заказ (ordering), куда включить авторов и названия тех книг, 
количество экземпляров которых в таблице book меньше 4. Для всех книг указать одинаковое количество экземпляров 5.
CREATE TABLE ordering AS
SELECT author, title, 5 AS amount
FROM book
WHERE amount < 4;

SELECT * FROM ordering;

Создать таблицу заказ (ordering), куда включить авторов и названия тех книг, количество экземпляров которых в таблице book меньше 4. 
Для всех книг указать одинаковое значение - среднее количество экземпляров книг в таблице book.
CREATE TABLE ordering AS
SELECT author, title, 
   (
    SELECT ROUND(AVG(amount)) 
    FROM book
   ) AS amount
FROM book
WHERE amount < 4;

SELECT * FROM ordering;

оздать таблицу заказ (ordering), куда включить авторов и названия тех книг, количество экземпляров которых в таблице book меньше 
среднего количества экземпляров книг в таблице book. В таблицу включить столбец   amount, 
в котором для всех книг указать одинаковое значение - среднее количество экземпляров книг в таблице book.
CREATE TABLE ordering AS
SELECT author, title, 
   (
    SELECT ROUND(AVG(amount)) 
    FROM book
   ) AS amount
FROM book
WHERE amount<(SELECT ROUND(AVG(amount)) FROM book);

SELECT * FROM ordering;

*********************************************************Оператор LIMIT
Вывести два города, в которых чаще всего были в командировках сотрудники. Вычисляемый столбец назвать Количество.
select city, count(name) as 'Количество'
FROM trip
group by 1
order by 2 desc
limit 2

******************************************************Длительность DATEDIFF(дата_1, дата_2)
Вывести информацию о командировках во все города кроме Москвы и Санкт-Петербурга (фамилии и инициалы сотрудников, город ,  
длительность командировки в днях, при этом первый и последний день относится к периоду командировки). Последний столбец назвать Длительность. Информацию вывести в упорядоченном 
по убыванию длительности поездки, а потом по убыванию названий городов (в обратном алфавитном порядке).
